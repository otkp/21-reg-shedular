server.port=9191
server.contextPath=/scheduler
# Activity Database Connection 


#spring.data.mongodb.host=192.168.1.249
#spring.data.mongodb.database=REGISTRATION
#spring.data.mongodb.port=27017
#spring.data.mongodb.repositories.enabled=true

spring.data.mongodb.host=192.168.1.143
spring.data.mongodb.database=REG
spring.data.mongodb.port=1611
spring.data.mongodb.repositories.enabled=true
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=Mon8oCN2
#spring.data.mongodb.authentication-database=admin




server.ssl.key-store: keystore.p12
server.ssl.key-store-password: Otsi@1234
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat

#####################
#	JWT tokens		#
#####################
jwt.header=Authorization
jwt.secret=engrtd-anji
jwt.expiration=10800
jwt.route.authentication.path=auth
jwt.route.authentication.path.external=authExternal
jwt.route.authentication.refresh=refresh
isCaptchEnabled=false

# External User Secret Key
extUser.secret.key=devAasdsRbnbvnJfgfgUhdfhfgN
extUser.expiration=500

#Addhaar
reg.service.aadhaarToken:ot2dl3adr4anjipoiu1t+alow4aqwerby65=
reg.service.aadhaarValidationUrl:https://otsiqa.epragathi.org:9393/aadhaar/getAadhaarDetails

#PAN
reg.service.panValidationUrl=http://localhost:8080/getPandetails
rta.pan.token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBU0xFU0hBIiwiY3JlYXRlZCI6MTUxMzY4OTk2MzMxMCwic2NvcGUiOiJERUFMRVIiLCJleHAiOjE1MTM2OTE3NjMsImp0aSI6IkFTTEVTSEEifQ.EoAYedsTQ4YkrFW8EV5OaSBnJzdxGGLJxJXPzcxipJO0nN24uebWtnpZOdBhscg84EwBCoF5ZA8-wef8ww1q_A
reg.service.panValidationRequired=true
#Vahan
reg.service.vahanUrl=http://52.172.9.243:8080/vahan/getVahanDetails
#Value as percentage 
reg.service.invoiceValueValidation=10
# HSRP Configuration
hsrp.post.tr.records.url = http://43.242.124.207/laplhsrpservice/api/HSRPRecord/postHsrpRecords
hsrp.post.pr.records.url = http://43.242.124.207/laplhsrpservice/api/PRNumber/updatePRNumber
hsrp.securitykey = Z5^q3&G6k#b%0Me@
hsrp.contenttype = application/json

#Automatic revocation :
RC.autorevocation=0 0 21 1/1 * ?
#RC.autorevocation=	0 0/1 * 1/1 * ?
RC.autorevocation.isEnable=true

#Schedule cron expression for hsrp
scheduler.hsrp.failure  = 0 0 5 * * *

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.hsrp.failure.isEnable=false

##scheduler registration tr expired enable flag true:'ll exicute
#scheduler.reg.tr.expired.isEnable=false
#
##scheduler registration tr expired cron at 00:01 am
#scheduler.reg.tr.expired.cron=0 0/10 * 1/1 * ?
#pr generation url
reg.service.prgenerationurl=http://localhost:8989/reg/master/generatePrNo

reg.service.serverUrl=https://localhost:8989/reg/

reg.service.images.new.url=https://localhost:8989/reg/images/getApplicantImageById

#financierPassword
financier.password=$2a$10$VGzjAOuyegi0kIiozBtyMe2jfnV4cXQOgjBToIU4t8C5LQpBDGdei

#elastic SecondVehicleSearch url
elasticSearch.secondVehicle.url=http://10.80.2.194:8766/elasticSearch/getSecondVehicleData

########TAX########
reg.fresh.stateCode=AP
reg.fresh.status=Recent
reg.fresh.vehicle.age=0
reg.fresh.vehicle.amount=1000000
reg.fresh.reg.otherState=other
reg.fresh.reg.lifeTaxCode=L
reg.fresh.reg.quarterlyCode=Q
reg.fresh.reg.bothCode=B
reg.fresh.reg.seatingCapacityCode=S
reg.fresh.reg.ulwCode=U
reg.fresh.reg.rlwCode=G
reg.fresh.reg.battery=battery
reg.fresh.reg.electric=ELECTRIC
reg.fresh.permitcode=INA
reg.fresh.puc.validity.inmonths=6
sbi.key.location=APT_GOVT.key


#flowscript location
script.engine.location=flowscript//FlowScript.js
#scriptengine name
script.engine.name=nashron
#records 
no.of.records.assign=1


#Second Vehicle Search
reg.service.secondVehicleSearchUrl=http://localhost:8988/svs/getSecondVehicleList


#Engine ChassisNo Validation
reg.service.engineChassisNovalidationUrl=https://otsidev.epragathi.org:8443/ecv/engineChassisNoValidation


#Cfst Sync Url
reg.service.cfstSyncUrl=http://localhost:8986/cfstSync/saveSyncData

#Cfst Vcr Details Url
reg.service.vcrDetailsFromCfstUrl=http://localhost:8980/cfstvcr

#############################################################
#     				Communication Configuration  			# 
#############################################################

sms.host=msdgweb.mgov.gov.in/esms/sendsmsrequest
sms.password=APCFST@123
sms.username=APTD-RMND
sms.senderid=APTDMG

email.host=smtp.gmail.com
email.port=465
email.userName=support@aptransport.org
email.from=support
email.password=laserjet


notification.sms.queue=QUEUE.IN.sms
notification.email.queue=QUEUE.IN.email

#activemq.broker-url=tcp://192.168.1.249:61616

activemq.broker-url=tcp://192.168.1.142:61616
#CreditAccounts
rta.hoa.creditAccount=35988354730
cess.hoa.creditAccount=37773777052
hsrp.hoa.creditAccount=36087321619
lifeTax.headOfAccount=0041001020004000000NVN
qtlyTax.headOfAccount=0041001020003000000NVN
greenTax.greenTaxHoa=0041001020005000000NVN
greenTax.serviceFeeHoa:0041008000081001000NVN
greenTax.applicationFeeHoa=0041001010005000000NVN

#payemnt
#Make it as true and uncomment below isInTestPayment for the payment test payment with amount = 0  
isInTestPayment=false

#Schedule cron expression for cfst sync
scheduler.cfst.sync.process.interval=  0 */30 * ? * *
#Scheduler accepts (true/false). If value is not found, it will be considered as false
scheduler.cfst.sync.process.isEnable=false


#Schedule cron expression to release lock for registration lockedBy role
application.lock.realese=0 0 5 1/1 * ?
#Scheduler accepts (true/false). If value is not found, it will be considered as false 
release.lock.process.isEnable=true


#Schedule cron expression to release lock for registration service lockedBy role
application.lock.reg.realese=0 0 5 1/1 * ?
#Scheduler accepts (true/false). If value is not found, it will be considered as false 
release.reg.lock.process.isEnable=true


#Registration Payments Details for CFST
cfst.service.authenticationToken = AojfkdjfkRjshjhsjhsjJdsdhsgshfgUsdsakjfhjN===

#max image size
spring.http.multipart.maxFileSize=100MB
spring.http.multipart.maxRequestSize=100MB


#scheduler registration pr reopen enable flag true:'ll exicute
scheduler.reg.pr.reopen.isEnable=false

#scheduler registration pr open cron at 00:01 am
scheduler.reg.pr.reopen.cron=0 */1 * ? * *


#Encryption-Decryption keySets
encryption.secret.key =ssdkF$ANy2A#D%kd


#############################################################
#     		  		schedulers		             			# 
#############################################################
#
#Expression format for cron expression
#  +---------------- minute (0 - 59)
 # |  +-------------- hour (0 - 23)
 # |  |  +------------ day of month (1 - 31)
 # |  |  |  +---------- month (1 - 12)
 # |  |  |  |  +-------- day of week (0 - 6) (Sunday=0 or 7)
 # |  |  |  |  |
 # *  *  *  *  *  command to be executed 

#Schedule cron expression for create/update number pool series of all offices
#scheduler.bid.number.pool.update.interval=0 * * ? * *
scheduler.bid.number.pool.update.interval=0 0 * * * *


#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.number.pool.update.isEnable=false

#Schedule cron expression for bid closing process for all series at all offices
scheduler.bid.closing.process.interval=0 0 * * * *
#one min
#scheduler.bid.closing.process.interval=0 * * ? * *


#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.closing.process.isEnable=false

#Schedule cron expression to release special number if Payment status is pending
scheduler.bid.release.sn.process.interval=0 0 15 1/1 * ?

#Scheduler accepts (true/false). If value is not found, it will be considered as false.
scheduler.bid.release.sn.process.isEnable=false

bid.register.payment.verify.services=0 0 1 1/1 * ? 
bid.register.payment.verify.services.isEnable=true

bid.final.payment.verify.services=0 30 3 1/1 * ?
bid.final.payment.verify.services.isEnable=true

#Schedule cron expression to auto approve other state noc verification
os.nocauto.approve.process.interval=0 0 5 1/1 * ?
#Scheduler accepts (true/false). If value is not found, it will be considered as false 
os.noc.autoapprove.process.isEnable=true

#New registration auto verify payments jobs.
reg.new.payments.auto.verify=0 0 1/2 1/1 * ? 
new.reg.payments.auto.verify.isEnable=false

#Registration services auto verify payments jobs.
reg.services.payments.auto.verify=0 0 2/2 1/1 * ?
reg.services.payments.auto.verify.isEnable=false  

#Clear Auth (JWT Hash) tokens every thirty minutes.
reg.token.authentication.requests.clear=0 0/30 * * * ?




# Non payment Report services auto jobs
reg.non.payments.report=0 0 01 1 FEB,MAY,AUG,NOV ? 
reg.non.payments.report.isEnable=true

#Registration vahan sync Noc jobs.
reg.vahan.noc.sync=0 0 2 * * ?
reg.vahan.sync.noc.isEnable=true

#Registration vahan sync new jobs.
reg.vahan.new.sync=0 0 23 * * ?
reg.vahan.sync.new.isEnable=true


#Stoppage
# every 30 mints
stoppage.process=0 */30 * ? * *
# every 1 mints
#stoppage.process=* * * * * *
# Every day at midnight - 12am
#stoppage.process=0 0 0 * * ?


################## SAS last 5 days collection related Crons ####################

# sas_payments at 2:50 am
sas_payments=0 50 2 * * ? 

# sas_flowdetails at 01:40 am
sas_flowdetails=0 40 1 * * ?

# sas_permitdetails at 1:30 am
sas_permitdetails=0 30 1 * * ?

# sas_taxdetails at  1:20 am
sas_taxdetails=0 20 1 * * ?

# sas_registrationdetails at 1:00 am
sas_registrationdetails=0 0 1 * * ?


#citizenpayment breakup for non payment reports
citizen.tax.payment.braekup.url=https://otsiuat.epragathi.org:8443/reg/citizenServices/getCitizenPaymentBraekup